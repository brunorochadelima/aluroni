{"version":3,"file":"static/js/838.40697a9b.chunk.js","mappings":";gKACA,WAAgB,KAAO,wBAAwB,WAAa,8BAA8B,mBAAqB,sCAAsC,mBAAqB,sCAAsC,mBAAqB,sCAAsC,oBAAsB,uCAAuC,aAAe,gCAAgC,iBAAmB,oCAAoC,YAAc,4DCI7a,SAASA,EAAT,GAA+D,IAAD,EAAzCC,EAAyC,EAAzCA,SAAUC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,MAC3D,OACE,iBAAKC,UAAWC,EAAAA,KAAhB,WACE,gBACED,UAAWE,GAAAA,EAAU,eAClBD,EAAAA,YAAoB,IADF,SAElBA,EAAO,eAAD,OAAgBL,EAASO,MAAMC,iBAAmB,GAFtC,IADvB,SAMGR,EAASO,SAEZ,iBAAKH,UAAWC,EAAAA,aAAhB,UAAsCJ,EAAtC,QACA,iBAAKG,UAAWC,EAAAA,iBAAhB,UACGH,EADH,aACkC,IAAZA,EAAgB,GAAK,QAE3C,iBAAKE,UAAWC,EAAAA,YAAhB,gBAAwCF,EAAMM,QAAQ,6BCpB5D,OAOC,WACA,aAEA,IAAIC,EAAS,GAAGC,eAEhB,SAASL,IAGR,IAFA,IAAIM,EAAU,GAELC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAC1C,IAAIG,EAAMF,UAAUD,GACpB,GAAKG,EAAL,CAEA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC3BL,EAAQM,KAAKF,QACP,GAAIG,MAAMC,QAAQJ,IACxB,GAAIA,EAAID,OAAQ,CACf,IAAIM,EAAQf,EAAWgB,MAAM,KAAMN,GAC/BK,GACHT,EAAQM,KAAKG,SAGT,GAAgB,WAAZJ,EACV,GAAID,EAAIO,WAAaC,OAAOC,UAAUF,SACrC,IAAK,IAAIG,KAAOV,EACXN,EAAOiB,KAAKX,EAAKU,IAAQV,EAAIU,IAChCd,EAAQM,KAAKQ,QAIfd,EAAQM,KAAKF,EAAIO,aAKpB,OAAOX,EAAQgB,KAAK,KAGgBC,EAAOC,SAC3CxB,EAAWyB,QAAUzB,EACrBuB,EAAOC,QAAUxB,QAGX,kBACL,OAAOA,GADF,QAAe,OAAf,aA5CP","sources":["webpack://aluroni/./src/components/TagsPrato/TagsPrato.module.scss?e742","components/TagsPrato/index.tsx","../node_modules/classnames/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"tags\":\"TagsPrato_tags__EHE+0\",\"tags__tipo\":\"TagsPrato_tags__tipo__qz0VQ\",\"tags__tipo__massas\":\"TagsPrato_tags__tipo__massas__NNQsv\",\"tags__tipo__carnes\":\"TagsPrato_tags__tipo__carnes__q37XD\",\"tags__tipo__combos\":\"TagsPrato_tags__tipo__combos__9KGFv\",\"tags__tipo__veganos\":\"TagsPrato_tags__tipo__veganos__KcU3D\",\"tags__porcao\":\"TagsPrato_tags__porcao__oYz2e\",\"tags__qtdpessoas\":\"TagsPrato_tags__qtdpessoas__JsI-a\",\"tags__valor\":\"TagsPrato_tags__valor__CJ5Ik\"};","import React from 'react';\nimport styles from './TagsPrato.module.scss';\nimport classNames from 'classnames';\nimport { Prato } from 'types/Prato';\n\nexport default function TagsPrato({ category, size, serving, price }: Prato) {\n  return (\n    <div className={styles.tags}>\n      <div\n        className={classNames({\n          [styles.tags__tipo]: true,\n          [styles[`tags__tipo__${category.label.toLowerCase()}`]]: true,\n        })}\n      >\n        {category.label}\n      </div>\n      <div className={styles.tags__porcao}>{size}g</div>\n      <div className={styles.tags__qtdpessoas}>\n        {serving} 2 pessoas{serving === 1 ? '' : 's'}\n      </div>\n      <div className={styles.tags__valor}>R$ {price.toFixed(2)}</div>\n    </div>\n  );\n}\n","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"names":["TagsPrato","category","size","serving","price","className","styles","classNames","label","toLowerCase","toFixed","hasOwn","hasOwnProperty","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default"],"sourceRoot":""}